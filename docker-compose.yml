version: '3.8'

services:
  user:
    image: user-app
    ports:
      - "8080:8080"
    environment:
      HAZELCAST_HOST: hazelcast
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: springsoft
      DB_USER: root
      DB_PASSWORD: pas123
      SERVER_PORT: 8080
      KAFKA_BOOTSTRAP_SERVERS: kafka
  order:
    image: order-app
    ports:
      - "8090:8080"
    environment:
      HAZELCAST_HOST: hazelcast
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: springsoft
      DB_USER: root
      DB_PASSWORD: pas123
      SERVER_PORT: 8080
      KAFKA_BOOTSTRAP_SERVERS: kafka
      API_USER: http://user:8080
  postgres:
    image: postgres:13
    environment:
      POSTGRES_DB: springsoft
      POSTGRES_USER: root
      POSTGRES_PASSWORD: pas123
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data

  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:6.2.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  hazelcast:
    image: hazelcast/hazelcast:5.1.3
    ports:
      - "5701:5701"

volumes:
  postgres-data: